{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sirca\\\\mutualaidmapper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MapComponent from './MapComponent';\nimport { getStates, getCities, getNeighborhoods } from './locationData';\n\n// The backend API endpoint\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api/reports';\nfunction App() {\n  _s();\n  // State for the list of reports\n  const [reports, setReports] = useState([]);\n  // State for the form inputs\n  const [groupName, setGroupName] = useState('');\n  const [activityType, setActivityType] = useState('Food Distribution');\n  const [description, setDescription] = useState('');\n  const [state, setState] = useState('');\n  const [city, setCity] = useState('');\n  const [neighborhood, setNeighborhood] = useState('');\n  const [darkMode, setDarkMode] = useState(true);\n  const [availableCities, setAvailableCities] = useState([]);\n  const [availableNeighborhoods, setAvailableNeighborhoods] = useState([]);\n  useEffect(() => {\n    setAvailableCities(getCities(state));\n    setCity('');\n    setNeighborhood('');\n  }, [state]);\n  useEffect(() => {\n    setAvailableNeighborhoods(getNeighborhoods(state, city));\n    setNeighborhood('');\n  }, [state, city]);\n\n  // Fetch reports from the backend when the component mounts\n  useEffect(() => {\n    fetch(API_URL).then(res => res.json()).then(data => setReports(data)).catch(error => console.error(\"Error fetching reports:\", error));\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Geocode neighborhood, city, state to lat/lng\n    const locationQuery = neighborhood ? `${neighborhood}, ${city}, ${state}, USA` : `${city}, ${state}, USA`;\n    const geocodeUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(locationQuery)}&limit=1`;\n    try {\n      const geoResponse = await fetch(geocodeUrl);\n      const geoData = await geoResponse.json();\n      if (geoData.length === 0) {\n        alert('Location not found. Please check city and state.');\n        return;\n      }\n      const newReport = {\n        groupName,\n        activityType,\n        description,\n        location: {\n          lat: parseFloat(geoData[0].lat),\n          lng: parseFloat(geoData[0].lon),\n          state,\n          city,\n          neighborhood\n        }\n      };\n\n      // Send the new report to the backend\n      fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newReport)\n      }).then(res => res.json()).then(savedReport => {\n        // Add the new report to the top of the list\n        setReports([savedReport, ...reports]);\n        // Clear form fields\n        setGroupName('');\n        setDescription('');\n        setState('');\n        setCity('');\n        setNeighborhood('');\n      }).catch(error => console.error(\"Error submitting report:\", error));\n    } catch (error) {\n      console.error(\"Error geocoding location:\", error);\n      alert('Error finding location. Please try again.');\n    }\n  };\n\n  // Apply dark mode to entire page\n  useEffect(() => {\n    document.body.className = darkMode ? 'dark-mode' : '';\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mutual Aid Activity Mapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dark-mode-toggle\",\n        onClick: () => setDarkMode(!darkMode),\n        children: darkMode ? '☀️' : '🌙'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Report an Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: groupName,\n            onChange: e => setGroupName(e.target.value),\n            placeholder: \"Group Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: activityType,\n            onChange: e => setActivityType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Food Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Shelter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Medical Supplies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Clothing Drive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: state,\n            onChange: e => setState(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), getStates().map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: state,\n              children: state\n            }, state, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: city,\n            onChange: e => setCity(e.target.value),\n            required: true,\n            disabled: !state,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), availableCities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city,\n              children: city\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: neighborhood,\n            onChange: e => setNeighborhood(e.target.value),\n            disabled: !city,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Neighborhood (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), availableNeighborhoods.map(neighborhood => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: neighborhood,\n              children: neighborhood\n            }, neighborhood, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            placeholder: \"Activity Description...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reports-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recent Activities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), reports.map(report => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"report-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [report.activityType, \" by \", report.groupName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: report.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Location: \", report.location.neighborhood ? `${report.location.neighborhood}, ` : '', report.location.city, \", \", report.location.state]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\" | Reported: \", new Date(report.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, report.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Activity Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n          reports: reports,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Oltux8b+WmU5TED518DWA4ZYKE4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapComponent","getStates","getCities","getNeighborhoods","jsxDEV","_jsxDEV","API_URL","App","_s","reports","setReports","groupName","setGroupName","activityType","setActivityType","description","setDescription","state","setState","city","setCity","neighborhood","setNeighborhood","darkMode","setDarkMode","availableCities","setAvailableCities","availableNeighborhoods","setAvailableNeighborhoods","fetch","then","res","json","data","catch","error","console","handleSubmit","event","preventDefault","locationQuery","geocodeUrl","encodeURIComponent","geoResponse","geoData","length","alert","newReport","location","lat","parseFloat","lng","lon","method","headers","body","JSON","stringify","savedReport","document","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","e","target","placeholder","required","map","disabled","report","Date","timestamp","toLocaleString","id","_c","$RefreshReg$"],"sources":["C:/Users/sirca/mutualaidmapper/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport MapComponent from './MapComponent';\r\nimport { getStates, getCities, getNeighborhoods } from './locationData';\r\n\r\n// The backend API endpoint\r\nconst API_URL = 'http://localhost:5000/api/reports';\r\n\r\nfunction App() {\r\n  // State for the list of reports\r\n  const [reports, setReports] = useState([]);\r\n  // State for the form inputs\r\n  const [groupName, setGroupName] = useState('');\r\n  const [activityType, setActivityType] = useState('Food Distribution');\r\n  const [description, setDescription] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [neighborhood, setNeighborhood] = useState('');\r\n  const [darkMode, setDarkMode] = useState(true);\r\n  \r\n  const [availableCities, setAvailableCities] = useState([]);\r\n  const [availableNeighborhoods, setAvailableNeighborhoods] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    setAvailableCities(getCities(state));\r\n    setCity('');\r\n    setNeighborhood('');\r\n  }, [state]);\r\n  \r\n  useEffect(() => {\r\n    setAvailableNeighborhoods(getNeighborhoods(state, city));\r\n    setNeighborhood('');\r\n  }, [state, city]);\r\n\r\n  // Fetch reports from the backend when the component mounts\r\n  useEffect(() => {\r\n    fetch(API_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => setReports(data))\r\n      .catch((error) => console.error(\"Error fetching reports:\", error));\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Geocode neighborhood, city, state to lat/lng\r\n    const locationQuery = neighborhood \r\n      ? `${neighborhood}, ${city}, ${state}, USA`\r\n      : `${city}, ${state}, USA`;\r\n    const geocodeUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(locationQuery)}&limit=1`;\r\n    \r\n    try {\r\n      const geoResponse = await fetch(geocodeUrl);\r\n      const geoData = await geoResponse.json();\r\n      \r\n      if (geoData.length === 0) {\r\n        alert('Location not found. Please check city and state.');\r\n        return;\r\n      }\r\n\r\n      const newReport = {\r\n        groupName,\r\n        activityType,\r\n        description,\r\n        location: {\r\n          lat: parseFloat(geoData[0].lat),\r\n          lng: parseFloat(geoData[0].lon),\r\n          state,\r\n          city,\r\n          neighborhood\r\n        },\r\n      };\r\n\r\n    // Send the new report to the backend\r\n    fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newReport),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((savedReport) => {\r\n        // Add the new report to the top of the list\r\n        setReports([savedReport, ...reports]);\r\n        // Clear form fields\r\n        setGroupName('');\r\n        setDescription('');\r\n        setState('');\r\n        setCity('');\r\n        setNeighborhood('');\r\n      })\r\n      .catch((error) => console.error(\"Error submitting report:\", error));\r\n    } catch (error) {\r\n      console.error(\"Error geocoding location:\", error);\r\n      alert('Error finding location. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Apply dark mode to entire page\r\n  useEffect(() => {\r\n    document.body.className = darkMode ? 'dark-mode' : '';\r\n  }, [darkMode]);\r\n\r\n  return (\r\n    <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\r\n      <header className=\"App-header\">\r\n        <h1>Mutual Aid Activity Mapper</h1>\r\n        <button className=\"dark-mode-toggle\" onClick={() => setDarkMode(!darkMode)}>\r\n          {darkMode ? '☀️' : '🌙'}\r\n        </button>\r\n      </header>\r\n      <main>\r\n        <div className=\"report-form\">\r\n          <h2>Report an Activity</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={groupName} onChange={(e) => setGroupName(e.target.value)} placeholder=\"Group Name\" required />\r\n            <select value={activityType} onChange={(e) => setActivityType(e.target.value)}>\r\n              <option>Food Distribution</option>\r\n              <option>Shelter</option>\r\n              <option>Medical Supplies</option>\r\n              <option>Clothing Drive</option>\r\n              <option>Other</option>\r\n            </select>\r\n            <select value={state} onChange={(e) => setState(e.target.value)} required>\r\n              <option value=\"\">Select State</option>\r\n              {getStates().map(state => (\r\n                <option key={state} value={state}>{state}</option>\r\n              ))}\r\n            </select>\r\n            <select value={city} onChange={(e) => setCity(e.target.value)} required disabled={!state}>\r\n              <option value=\"\">Select City</option>\r\n              {availableCities.map(city => (\r\n                <option key={city} value={city}>{city}</option>\r\n              ))}\r\n            </select>\r\n            <select value={neighborhood} onChange={(e) => setNeighborhood(e.target.value)} disabled={!city}>\r\n              <option value=\"\">Select Neighborhood (Optional)</option>\r\n              {availableNeighborhoods.map(neighborhood => (\r\n                <option key={neighborhood} value={neighborhood}>{neighborhood}</option>\r\n              ))}\r\n            </select>\r\n            <textarea value={description} onChange={(e) => setDescription(e.target.value)} placeholder=\"Activity Description...\"></textarea>\r\n            <button type=\"submit\">Submit Report</button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"reports-list\">\r\n          <h2>Recent Activities</h2>\r\n          {reports.map((report) => (\r\n            <div key={report.id} className=\"report-item\">\r\n              <h3>{report.activityType} by {report.groupName}</h3>\r\n              <p>{report.description}</p>\r\n              <small>Location: {report.location.neighborhood ? `${report.location.neighborhood}, ` : ''}{report.location.city}, {report.location.state}</small>\r\n              <small> | Reported: {new Date(report.timestamp).toLocaleString()}</small>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"map-container\">\r\n          <h2>Activity Map</h2>\r\n          <MapComponent reports={reports} darkMode={darkMode} />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}